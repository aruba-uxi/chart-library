---
# Source: asimmetric-example/charts/asimmetric/templates/applications-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example-service
  labels:
    app.kubernetes.io/name: example-service
    app.kubernetes.io/instance: asimmetric-example
    helm.sh/chart: asimmetric-1.0.0
    app.kubernetes.io/managed-by: Helm
    repository: asimmetric-example
---
# Source: asimmetric-example/charts/asimmetric/templates/cronjobs-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example-cronjob-producer
  labels:
    app.kubernetes.io/name: example-cronjob-producer
    app.kubernetes.io/instance: asimmetric-example
    helm.sh/chart: asimmetric-1.0.0
    app.kubernetes.io/managed-by: Helm
    repository: asimmetric-example
---
# Source: asimmetric-example/charts/asimmetric/templates/applications-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: example-service
  labels:
    app.kubernetes.io/name: example-service
    app.kubernetes.io/instance: asimmetric-example
    helm.sh/chart: asimmetric-1.0.0
    app.kubernetes.io/managed-by: Helm
    repository: asimmetric-example
data:
    config.json: |
      {
        foo: bar
        bing: bang
        server: {
          host: hostname
        }
      }
---
# Source: asimmetric-example/charts/asimmetric/templates/applications-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: example-service
  labels:
    app.kubernetes.io/name: example-service
    app.kubernetes.io/instance: asimmetric-example
    helm.sh/chart: asimmetric-1.0.0
    app.kubernetes.io/managed-by: Helm
    repository: asimmetric-example
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8000
  selector:
    app.kubernetes.io/name: example-service
    app.kubernetes.io/instance: asimmetric-example
---
# Source: asimmetric-example/charts/asimmetric/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-service
  labels:
    app.kubernetes.io/name: example-service
    app.kubernetes.io/instance: asimmetric-example
    helm.sh/chart: asimmetric-1.0.0
    app.kubernetes.io/managed-by: Helm
    repository: asimmetric-example
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: example-service
      app.kubernetes.io/instance: asimmetric-example
  template:
    metadata:
      labels:
        app.kubernetes.io/name: example-service
        app.kubernetes.io/instance: asimmetric-example
        helm.sh/chart: asimmetric-1.0.0
        app.kubernetes.io/managed-by: Helm
        repository: asimmetric-example
    spec:
      imagePullSecrets:
      - name: sealed-image-pull-secret
      serviceAccountName: example-service
      containers:
        - name: webapp
          image: "quay.io/uxi/asimmetric-example:latest"
          imagePullPolicy: Always
          env:
          - name: ENVIRONMENT
            value: "staging"
          - name: DD_ENABLED
            value: true}}
          - name: DD_ENV
            value: "staging"
          - name: DD_SERVICE
            value: example-service
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_ENTITY_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.uid          
          - name: AWS_DEFAULT_REGION
            value: "us-west-1"
          - name: DEBUG
            value: "false"          
          - name: HOST_IP
            valueFrom:
             fieldRef:
               fieldPath: status.hostIP          
          - name: AWS_ACCESS_ID
            valueFrom:
             secretKeyRef:
               name: example-service-aws-access
               key: AWS_ACCESS_ID
          - name: AWS_REGION
            valueFrom:
             secretKeyRef:
               name: example-service-aws-access
               key: AWS_REGION
          - name: DATABASE_URL
            valueFrom:
             secretKeyRef:
               name: example-service-database-url
               key: DATABASE_URL
          ports:
          - name: http
            containerPort: 8000
            protocol: TCP
          readinessProbe:
            httpGet:
              httpHeaders:
              - name: Host
                value: readinessProbe
              - name: Content-Type
                value: application/json
              path: /readyz
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              httpHeaders:
              - name: Host
                value: livenessProbe
              - name: Content-Type
                value: application/json
              path: /livez
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
          - name: config
            mountPath: /app/config
            readOnly: true
      volumes:
      - name: config
        configMap:
          name: example-service
---
# Source: asimmetric-example/charts/asimmetric/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-worker
  labels:
    app.kubernetes.io/name: example-worker
    app.kubernetes.io/instance: asimmetric-example
    helm.sh/chart: asimmetric-1.0.0
    app.kubernetes.io/managed-by: Helm
    repository: asimmetric-example
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: example-worker
      app.kubernetes.io/instance: asimmetric-example
  template:
    metadata:
      labels:
        app.kubernetes.io/name: example-worker
        app.kubernetes.io/instance: asimmetric-example
        helm.sh/chart: asimmetric-1.0.0
        app.kubernetes.io/managed-by: Helm
        repository: asimmetric-example
    spec:
      imagePullSecrets:
      - name: sealed-image-pull-secret
      containers:
        - name: worker
          image: "quay.io/uxi/asimmetric-example:latest"
          imagePullPolicy: Always
          command: ["echo","foo bar biz"]
          env:
          - name: ENVIRONMENT
            value: "staging"
          - name: DD_ENABLED
            value: false}}          
          - name: DEBUG
            value: "false"          
          - name: HOST_IP
            valueFrom:
             fieldRef:
               fieldPath: status.hostIP          
          - name: AWS_ACCESS_ID
            valueFrom:
             secretKeyRef:
               name: example-worker-aws-access
               key: AWS_ACCESS_ID
          - name: AWS_REGION
            valueFrom:
             secretKeyRef:
               name: example-worker-aws-access
               key: AWS_REGION
---
# Source: asimmetric-example/charts/asimmetric/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: example-cronjob-consumer
  labels:
    app.kubernetes.io/name: example-cronjob-consumer
    app.kubernetes.io/instance: asimmetric-example
    helm.sh/chart: asimmetric-1.0.0
    app.kubernetes.io/managed-by: Helm
    repository: asimmetric-example
spec:
  schedule: "*/5 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          imagePullSecrets:
          - name: sealed-image-pull-secret
          containers:
          - name: example-cronjob-consumer
            image: "quay.io/uxi/asimmetric-example:latest"
            imagePullPolicy: Always
            env:
            - name: ENVIRONMENT
              value: "staging"
            - name: DD_ENABLED
              value: false            
            - name: AWS_ACCESS_ID
              value: "uid-12345"
            - name: DEBUG
              value: "false"            
            - name: HOST_IP
              valueFrom:
               fieldRef:
                 fieldPath: status.hostIP            
            - name: AWS_ACCESS_ID
              valueFrom:
               secretKeyRef:
                 name: example-cronjob-consumer-aws-access
                 key: AWS_ACCESS_ID
            - name: AWS_REGION
              valueFrom:
               secretKeyRef:
                 name: example-cronjob-consumer-aws-access
                 key: AWS_REGION
            command: ["run-kinesis","consumer"]
          restartPolicy: Never
---
# Source: asimmetric-example/charts/asimmetric/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: example-cronjob-producer
  labels:
    app.kubernetes.io/name: example-cronjob-producer
    app.kubernetes.io/instance: asimmetric-example
    helm.sh/chart: asimmetric-1.0.0
    app.kubernetes.io/managed-by: Helm
    repository: asimmetric-example
spec:
  schedule: "*/10 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          imagePullSecrets:
          - name: sealed-image-pull-secret
          serviceAccountName: example-cronjob-producer
          containers:
          - name: example-cronjob-producer
            image: "quay.io/uxi/asimmetric-example:latest"
            imagePullPolicy: Always
            env:
            - name: ENVIRONMENT
              value: "staging"
            - name: DD_ENABLED
              value: true
            - name: DD_ENV
              value: "staging"
            - name: DD_SERVICE
              value: example-cronjob-producer
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_ENTITY_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid            
            - name: DEBUG
              value: "false"            
            - name: HOST_IP
              valueFrom:
               fieldRef:
                 fieldPath: status.hostIP            
            - name: AWS_ACCESS_ID
              valueFrom:
               secretKeyRef:
                 name: example-cronjob-producer-aws-access
                 key: AWS_ACCESS_ID
            - name: AWS_REGION
              valueFrom:
               secretKeyRef:
                 name: example-cronjob-producer-aws-access
                 key: AWS_REGION
            command: ["run-kinesis","producer"]
          restartPolicy: OnFailure
---
# Source: asimmetric-example/charts/asimmetric/templates/applications-sealedsecrets.yaml
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: example-service-aws-access
  labels:
    app.kubernetes.io/name: example-service
    app.kubernetes.io/instance: asimmetric-example
    helm.sh/chart: asimmetric-1.0.0
    app.kubernetes.io/managed-by: Helm
    repository: asimmetric-example
spec:
  encryptedData:
    AWS_ACCESS_ID: sealed_version_of_the_base64_encoded_aws_access_id
    AWS_REGION: sealed_version_of_the_base64_encoded_aws_region
---
# Source: asimmetric-example/charts/asimmetric/templates/applications-sealedsecrets.yaml
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: example-service-database-url
  labels:
    app.kubernetes.io/name: example-service
    app.kubernetes.io/instance: asimmetric-example
    helm.sh/chart: asimmetric-1.0.0
    app.kubernetes.io/managed-by: Helm
    repository: asimmetric-example
spec:
  encryptedData:
    DATABASE_URL: sealed_version_of_the_base64_encoded_database_url
---
# Source: asimmetric-example/charts/asimmetric/templates/applications-sealedsecrets.yaml
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: example-worker-aws-access
  labels:
    app.kubernetes.io/name: example-worker
    app.kubernetes.io/instance: asimmetric-example
    helm.sh/chart: asimmetric-1.0.0
    app.kubernetes.io/managed-by: Helm
    repository: asimmetric-example
spec:
  encryptedData:
    AWS_ACCESS_ID: sealed_version_of_the_base64_encoded_aws_access_id
    AWS_REGION: sealed_version_of_the_base64_encoded_aws_region
---
# Source: asimmetric-example/charts/asimmetric/templates/cronjobs-sealedsecrets.yaml
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: example-cronjob-consumer-aws-access
  labels:
    app.kubernetes.io/name: example-cronjob-consumer
    app.kubernetes.io/instance: asimmetric-example
    helm.sh/chart: asimmetric-1.0.0
    app.kubernetes.io/managed-by: Helm
    repository: asimmetric-example
spec:
  encryptedData:
    AWS_ACCESS_ID: sealed_version_of_the_base64_encoded_aws_access_id
    AWS_REGION: sealed_version_of_the_base64_encoded_aws_region
---
# Source: asimmetric-example/charts/asimmetric/templates/cronjobs-sealedsecrets.yaml
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: example-cronjob-producer-aws-access
  labels:
    app.kubernetes.io/name: example-cronjob-producer
    app.kubernetes.io/instance: asimmetric-example
    helm.sh/chart: asimmetric-1.0.0
    app.kubernetes.io/managed-by: Helm
    repository: asimmetric-example
spec:
  encryptedData:
    AWS_ACCESS_ID: sealed_version_of_the_base64_encoded_aws_access_id
    AWS_REGION: sealed_version_of_the_base64_encoded_aws_region
---
# Source: asimmetric-example/charts/asimmetric/templates/imagepullsecret.yaml
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: sealed-image-pull-secret
  labels:
    app.kubernetes.io/name: sealed-image-pull-secret
    helm.sh/chart: asimmetric-1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  encryptedData:
    .dockerconfigjson: sealed_version_of_the_base64_encoded_dockerconfigjson
  template:
    data: null
    metadata:
      name: sealed-image-pull-secret
      labels:
      app.kubernetes.io/name: sealed-image-pull-secret
      helm.sh/chart: asimmetric-1.0.0
      app.kubernetes.io/managed-by: Helm
    type: kubernetes.io/dockerconfigjson
