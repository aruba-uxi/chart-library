{{- range $appData := .Values.applications }}
---
{{- $applicationImage := $appData.image | default dict }} # image mapping is optional in app values
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $appData.name }}
  labels:
    {{- include "webapp.labels" (dict "context" $ "name" $appData.name) | nindent 4 }}
spec:
  replicas: {{ $appData.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "webapp.selectorLabels" (dict "context" $ "name" $appData.name) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "webapp.labels" (dict "context" $ "name" $appData.name) | nindent 8 }}
    spec:
      {{- if $.Values.global.sealedImagePullSecret }}
      imagePullSecrets:
      - name: sealed-image-pull-secret
      {{- end }}
      {{- if $appData.serviceAccount }}
      serviceAccountName: {{ template "webapp.serviceAccountName" (dict "context" $ "appData" $appData) }}
      {{- end }}
      containers:
        - name: {{ $appData.name }}
          image: "{{ default $.Values.global.image.repository $applicationImage.repository }}:{{ default $.Values.global.image.tag $applicationImage.tag }}"
          imagePullPolicy: {{ default $.Values.global.image.pullPolicy $applicationImage.pullPolicy }}
          {{- if $appData.command }}
          command: {{ toRawJson $appData.command }}
          {{- end }}
          {{- if or $appData.env $appData.envFields $appData.envSealedSecrets }}
          env:
          {{- include "webapp.env-variables" (dict "appData" $appData) | indent 12 }}
          {{- include "webapp.env-sealed-secrets" (dict "appData" $appData) | indent 12 }}
          {{- include "webapp.env-fields" (dict "appData" $appData) | indent 12 }}
          {{- end }}
          {{- if $appData.port }}
          ports:
          - name: http
            containerPort: {{ $appData.port }}
            protocol: TCP
          {{- end }}
          {{- if $appData.readinessProbe }}
          readinessProbe:
            httpGet:
              httpHeaders:
              - name: Host
                value: readinessProbe
              - name: Content-Type
                value: application/json
              path: {{ $appData.readinessProbe.path }}
              port: {{ $appData.port }}
            initialDelaySeconds: {{ $appData.readinessProbe.initialDelaySeconds | default "10" }}
            periodSeconds: {{ $appData.readinessProbe.periodSeconds | default "10" }}
            timeoutSeconds: {{ $appData.readinessProbe.timeoutSeconds | default "1" }}
            successThreshold: {{ $appData.readinessProbe.successThreshold | default "1" }}
            failureThreshold: {{ $appData.readinessProbe.failureThreshold | default "3" }}
          {{- end }}
          {{- if $appData.livenessProbe }}
          livenessProbe:
            httpGet:
              httpHeaders:
              - name: Host
                value: livenessProbe
              - name: Content-Type
                value: application/json
              path: {{ $appData.livenessProbe.path }}
              port: {{ $appData.port }}
            initialDelaySeconds: {{ $appData.livenessProbe.initialDelaySeconds | default "10" }}
            periodSeconds: {{ $appData.livenessProbe.periodSeconds | default "10" }}
            timeoutSeconds: {{ $appData.livenessProbe.timeoutSeconds | default "1" }}
            successThreshold: {{ $appData.livenessProbe.successThreshold | default "1" }}
            failureThreshold: {{ $appData.livenessProbe.failureThreshold | default "3" }}
          {{- end }}
          {{- with $appData.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if $appData.parallel }}
          parallelism: {{ $appData.parallel }}
          {{- end }}
          {{- if $appData.configMap }}
          volumeMounts:
          - name: config
            mountPath: {{ $appData.configMap.path }}
            readOnly: {{ default true $appData.configMap.readOnly }}
          {{- end }}
      {{- with $appData.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $appData.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $appData.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $appData.configMap }}
      volumes:
      - name: config
        configMap:
          name: {{ $appData.name }}
      {{- end }}
{{- end }}
