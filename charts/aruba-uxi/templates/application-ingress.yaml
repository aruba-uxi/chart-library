{{- range $name, $data := .Values.applications }}
{{- $legacyIngress := default dict $data.legacyIngress }}
{{- $svcPort := $data.port }}
{{- $additionalLabels := deepCopy (default dict $.Values.global.labels) | mustMerge (default dict $data.labels) }}
{{- if $legacyIngress.enabled -}}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ $name }}
  labels:
    {{- include "asimmetric.labels" (dict "context" $ "name" $name "additionalLabels" $additionalLabels) | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: legacy-ingress
spec:
  {{- if $legacyIngress.tls }}
  tls:
  {{- range $legacyIngress.tls }}
  - hosts:
      {{- range .hosts }}
      - {{ . | quote }}
      {{- end }}
    secretName: {{ .secretName }}
  {{- end }}
  {{- end }}
  rules:
  {{- range $legacyIngress.hosts }}
  - host: {{ .host | quote }}
    http:
      paths:
      {{- range $path := .paths }}
      - path: {{ $path }}
        backend:
          serviceName: {{ $name }}
          servicePort: {{ $svcPort }}
      {{- end }}
  {{- end }}
{{- end }}
{{- end }}
