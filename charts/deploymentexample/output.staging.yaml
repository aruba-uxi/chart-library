---
# Source: deploymentexample/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploymentexample
  labels:
    name: deploymentexample
    app: deploymentexample
    repo: chart-library
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deploymentexample
  template:
    metadata:
      labels:
        name: deploymentexample
        app: deploymentexample
        repo: chart-library
    spec:
      revisionHistoryLimit: 3
      serviceAccountName: deploy-service-account
      containers:
      - name: deploymentexample
        image: busybox:latest
        imagePullPolicy: Never
        command: ["printenv"]
        env:  
        - name: CAPE_ROLE
          value: "STAGING"  
        - name: AWS_ACCESS_ID
          valueFrom:
           secretKeyRef:
             name: aws-access
             key: AWS_ACCESS_ID
        - name: AWS_REGION
          valueFrom:
           secretKeyRef:
             name: aws-access
             key: AWS_REGION
        - name: DATABASE_URL
          valueFrom:
           secretKeyRef:
             name: database-url
             key: DATABASE_URL  
        - name: HOST_IP
          valueFrom:
           fieldRef:
             fieldPath: status.hostIP
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: Host
              value: readinessProbe
            - name: Content-Type
              value: application/json
            path: /readyz
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 3
        livenessProbe:
          httpGet:
            httpHeaders:
            - name: Host
              value: livenessProbe
            - name: Content-Type
              value: application/json
            path: /livez
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 3
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - name: config
          mountPath: /app/config.json
      imagePullSecrets:
      - name: sealed-image-pull-secret
      volumes:
      - name: config
        configMap:
          name: myconfig
---
# Source: deploymentexample/templates/deployment.yaml
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: aws-access
  labels:
    name: aws-access
    app: deploymentexample
    repo: chart-library
spec:
  encryptedData:
    AWS_ACCESS_ID: AgCIdNV/y8BhcHBt2DJ4qcjB6lmhXha...
    AWS_REGION: AgCIdNV/y8BhcHBt2DJ4qcjB6lmhXhaMyq4bTQzOQK...
---
# Source: deploymentexample/templates/deployment.yaml
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: database-url
  labels:
    name: database-url
    app: deploymentexample
    repo: chart-library
spec:
  encryptedData:
    DATABASE_URL: AgCIdNV/y8BhcHBt2DJ4qcj...
---
# Source: deploymentexample/templates/deployment.yaml
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: sealed-image-pull-secret
  namesapce: default
  labels:
    name: sealed-image-pull-secret
    app: deploymentexample
    repo: chart-library
spec:
  encryptedData:
    .dockerconfigjson: sealed_version_of_the_base64_encoded_dockerconfigjson
  template:
    data: null
    metadata:
      name: sealed-image-pull-secret
      namesapce: default
      labels:
        name: sealed-image-pull-secret
        app: deploymentexample
        repo: chart-library
    type: kubernetes.io/dockerconfigjson
